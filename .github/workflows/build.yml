name: Build Android Release APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Скачиваем код из репозитория
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Устанавливаем правильную версию Java (21)
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # 3. Устанавливаем правильную версию Node.js (20)
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    # 4. Устанавливаем все зависимости из package.json
    - name: Install dependencies
      run: npm install

    # 5. Синхронизируем веб-файлы с Android-проектом
    - name: Sync project
      run: npx cap sync android

    # 6. Декодируем и сохраняем ключ подписи из секрета GitHub
    - name: Decode Keystore
      run: echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > ${{ github.workspace }}/android/app/my-release-key.jks

    # 7. Даем права на выполнение скрипту сборки
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      working-directory: ./android

    # 8. Запускаем сборку РЕЛИЗНОГО APK с использованием секретов
    - name: Build Release APK
      run: ./gradlew assembleRelease
      working-directory: ./android
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

    # 9. Переименовываем и загружаем собранный APK как артефакт
    - name: Rename and Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk